@using System.Security.Claims
@inject IJSRuntime JSRuntime

<aside class="sidenav navbar navbar-vertical navbar-expand-xs border-0 border-radius-xl my-3 fixed-start ms-3   bg-gradient-dark" id="sidenav-main">
    <div class="sidenav-header">
        <i class="fas fa-times p-3 cursor-pointer text-white opacity-5 position-absolute end-0 top-0 d-none d-xl-none" aria-hidden="true" id="iconSidenav"></i>
        <a class="navbar-brand m-0" href=" https://demos.creative-tim.com/material-dashboard-pro/pages/dashboards/analytics.html " target="_blank">
            <img src="../../assets/img/logo-ct.png" class="navbar-brand-img h-100" alt="main_logo">
            <span class="ms-1 font-weight-bold text-white">Material Dashboard !!!</span>
        </a>
    </div>
    <hr class="horizontal light mt-0 mb-0" />
    <div class="collapse navbar-collapse  w-auto h-auto max-height-vh-100 h-100" id="sidenav-collapse-main">
        <ul class="navbar-nav">
            <AuthorizeView>                
                <Authorized>
                    <SideBarMaterialItem Title="@User?.Identity.Name" Image="@Avatar" Link="#ProfileNav">
                        <SideBarMaterialItem Title="My Profile" Link="#profile"></SideBarMaterialItem>
                        <SideBarMaterialItem Title="Settings" Link="#settings"></SideBarMaterialItem>
                        <SideBarMaterialItem Title="Logout" @onclick="BeginSignOut"></SideBarMaterialItem>
                    </SideBarMaterialItem>
                </Authorized>
                <NotAuthorized>
                    <SideBarMaterialItem Title="Entrar" Link="authentication/login"></SideBarMaterialItem>
                </NotAuthorized>
            </AuthorizeView>
            <hr class="horizontal light mt-0" />
            <SideBarMaterialItem Title="Material Dashboard" Icon="dashboard">
                <SideBarMaterialItem Title="Default" Link="material"></SideBarMaterialItem>
                <SideBarMaterialItem Title="Test" Link="test"></SideBarMaterialItem>
                <SideBarMaterialItem Title="Not Ready" Link="unready"></SideBarMaterialItem>
                <SideBarMaterialItem Title="Counter" Icon="add" Link="counter"></SideBarMaterialItem>
            </SideBarMaterialItem>

            <AuthorizeView>
                <Authorized>
                    <SideBarMaterialItem Title="Authorized" Icon="dashboard">
                        <SideBarMaterialItem Title="Fetch BlazorServer" Link="fetchdata"></SideBarMaterialItem>
                        <SideBarMaterialItem Title="Fetch Sufficit" Link="fetchsufficit"></SideBarMaterialItem>
                        <SideBarMaterialItem Title="User info ASP" Link="userinfobyasp"></SideBarMaterialItem>
                        <SideBarMaterialItem Title="User info Test" Link="userinfobytest"></SideBarMaterialItem>
                    </SideBarMaterialItem>
                </Authorized>
            </AuthorizeView>
    
            <SideBarMaterialItem Title="Development" Icon="dashboard">
                <SideBarMaterialItem Title="Estado das Extensões" Link="signalrpeer"></SideBarMaterialItem>
                <SideBarMaterialItem Title="Abandono de Fila" Link="signalrabandon"></SideBarMaterialItem>
                <SideBarMaterialItem Title="Segurança" Link="signalrsecurity"></SideBarMaterialItem>
            </SideBarMaterialItem>

            <AuthorizeView>
                <Authorized>
                    <SideBarMaterialItem Title="Telefonia" Icon="dashboard">
                        <SideBarMaterialItem Title="Chamadas" Link="pages/telephony/calls"></SideBarMaterialItem>
                        <SideBarMaterialItem Title="Telefone Web" Link="pages/telephony/webphone"></SideBarMaterialItem>
                    </SideBarMaterialItem>
                </Authorized>
            </AuthorizeView>
        </ul>
    </div>
</aside>

    

@code{
    [Inject] NavigationManager Navigation { get; set; }
    [Inject] SignOutSessionStateManager SignOutManager { get; set; }
    [Inject] AuthenticationStateProvider StateProvider { get; set; }

    protected ClaimsPrincipal User { get; set; }

    protected async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await Task.Yield();
        if (firstRender)
        {
            //await JSRuntime.InvokeVoidAsync("SideBarMaterial");
        }
    }

    protected string Avatar
    {
        get
        {
            string result = "https://www.sufficit.com.br/Relacionamento/Avatar.ashx?IDContexto=";
            if (User != null)
            {
                result += User.FindFirst(c => c.Type == "sub")?.Value;
            }
            return result;
        }
    }

    protected async void OnAuthenticationStateChanged(Task<AuthenticationState> task)
    {
        User = (await task).User;
        this.StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        User = (await StateProvider.GetAuthenticationStateAsync()).User;       
        StateProvider.AuthenticationStateChanged += OnAuthenticationStateChanged;
    }
}