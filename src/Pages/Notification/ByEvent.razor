@attribute [Route(RouteParameter)]
@inherits BasePageComponent
@using Sufficit.Blazor.Client.Components.Notification

@if (ContextView.ContextId.GetValueOrDefault() != Guid.Empty)
{
    <ClientView></ClientView>
}
else
{    
    <MudPaper Elevation="0" Style="background-color: transparent;" Class="px-md-16 py-16 d-flex align-center justify-center mud-width-full">
        <ClientMissing></ClientMissing>
    </MudPaper>
}

<MudCard Elevation="3" Class="pa-4 my-1">
    <MudCardHeader>
        <CardHeaderAvatar>
            <MudIcon Icon="@Icons.Material.Filled.Event"></MudIcon>
        </CardHeaderAvatar>
        <CardHeaderContent>
            <MudText Typo="Typo.body1">Escolha o evento</MudText>
            <MudText Typo="Typo.caption">A lista abaixo contêm os diversos tipos de eventos do nosso sistema</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudDivider DividerType="DividerType.Inset"></MudDivider>
    <MudCardContent>
        <MudGrid>
            <MudItem xs="12" sm="6" md="6">
                <MudSelect T="Sufficit.Notification.EventInfo"
                    Dense="true" 
                    Label="Evento" 
                    Variant="Variant.Text"
                    ValueChanged="OnEventChanged"
                    Value=@NEvent>
                    @if (Events != null)
                    {
                        @foreach (var nevent in Events)
                        {
                            <MudSelectItem Value="@nevent">
                                <MudText Align="Align.Left">@nevent.Title</MudText>
                                @if(!string.IsNullOrWhiteSpace(nevent.Description)) {
                                    <MudText Align="Align.Left" Typo="Typo.caption">@nevent.Description</MudText>
                                }
                            </MudSelectItem>
                        }
                    }
                </MudSelect>
            </MudItem>
            @if (ByKey)
            {
                <MudItem xs="12" sm="12" md="6">
                    <MudTextField
                    T="string"
                    @bind-Value="Key"
                    InputType="KeyInputType"
                    Adornment="Adornment.End"
                    AdornmentIcon="@KeyAdornmentIcon"
                    Immediate="true"
                    Label="Chave"
                    HelperText="@KeyHelperText"
                    Variant="Variant.Outlined"
                    FullWidth="true"
                    Class=""/>
                </MudItem>
            }
        </MudGrid>
    </MudCardContent>
</MudCard>

<NotificationContactValidate @ref=NotificationContactValidateRef OnValidate="OnValidate"></NotificationContactValidate>

@if (Validation?.Success ?? false)
{
    <MudCard>
        <MudCardHeader>
            Confirmar a inscrição ?
        </MudCardHeader>
        <MudCardActions>
            <MudButtonEnchanted Variant="Variant.Filled" FullWidth="true"
                StartIcon="@Icons.Material.Filled.Check"
                Color="@Color.Primary"
                OnClick="OnSubscribeClick">Inscrever</MudButtonEnchanted>
        </MudCardActions>
    </MudCard>
}

@if (NEvent != null && ContextView.ContextId.GetValueOrDefault() != Guid.Empty)
{
    <AuthorizeView>
        <Authorized>
            <NotificationSubscribers EventId="NEvent.Id"></NotificationSubscribers>
        </Authorized>
    </AuthorizeView>
}