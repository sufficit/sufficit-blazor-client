@page "/fetchsufficit"
@using Microsoft.Extensions.Logging
@attribute [Authorize]
@inject FetchWeatherForecastService WeatherService

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">
    <MudText Typo="Typo.h3" GutterBottom="true">Weather forecast</MudText>
    @if (Success)
    {
        <MudText Class="mb-8">This component demonstrates fetching data from the server.</MudText>
        @if (forecasts == null)
        {
            <MudProgressCircular Color="Color.Default" Indeterminate="true" />
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <td>Date</td>
                        <td>Temperature (C)</td>
                        <td>Temperature (F)</td>
                        <td>Summary</td>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var item in forecasts)
                    {
                        <tr>
                            <td>@item.Date</td>
                            <td>@item.TemperatureC</td>
                            <td>@item.TemperatureF</td>
                            <td>@item.Summary</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    }
</MudContainer>

@code {
    private WeatherForecast[] forecasts;

    [Inject]
    private ILogger<FetchData_Sufficit> Logger { get; set; }

    protected override bool ShouldRender() => Success;

    private bool Success { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            forecasts = await WeatherService.GetEndpointWeatherForeacast();
            Success = true;
        }
        catch (AccessTokenNotAvailableException exception)
        {
            Logger.LogError("erro ao consultar api redirecionando para token", exception);
            exception.Redirect();
        }
        catch (Exception ex)
        {
            Logger.LogError($"erro ao consultar api :: { ex.Message }");
        }
    }
}