@using Sufficit.Blazor.Client.Components.Contacts
@using Sufficit.Telephony;
@using System.Threading;
@if (ExtensionId.HasValue)
{
    @if (EndPoint != null)
    {
        <MudStack Row="true">
            @if (EndPoint.UserId.HasValue && EndPoint.UserId.Value != Guid.Empty)
            {
                <MudItem>
                    <ContactAvatar ReferenceId="@EndPoint.UserId.Value" />
                </MudItem>
            }
            <MudItem>
                <MudText Inline="true" Style="position: relative; table-layout:fixed; text-overflow:ellipsis; white-space: nowrap; overflow: hidden;">
                    @EndPoint.Title
                </MudText>
            </MudItem>        
        </MudStack>
    } 
    else if (!string.IsNullOrWhiteSpace(Exception))
    {
        <MudText Inline="true">@Exception</MudText>
    } 
    else
    {
        <MudSkeleton Animation="Animation.Pulse"></MudSkeleton>   
    }
}

@code {
    [Inject]
    private APIClientService APIClient { get; set; } = default!;

    [EditorRequired]
    [Parameter]
    public Guid? ExtensionId { get; set; }

    protected Sufficit.Telephony.EndPoint? EndPoint { get; set; }

    protected string? Exception { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        if (ExtensionId.HasValue && ExtensionId.Value != Guid.Empty)
        {
            EndPoint = await APIClient.Telephony.EndPoint.GetEndPoint(ExtensionId.Value, CancellationToken.None);
            if (EndPoint == null)
                Exception = $"endpoint not found: {ExtensionId}";
        }
    }
}