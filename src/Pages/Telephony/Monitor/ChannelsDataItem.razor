@using Sufficit.Client
@using Sufficit.Telephony
@using Sufficit.Blazor.Client.Models
@implements IDisposable

@if (Item != null)
{
    <MudTd DataLabel="Canal">@Item.Content.Key</MudTd>
    <MudTd DataLabel="Ínicio">@Item.Content.Start</MudTd>
    <MudTd DataLabel="Ínicio">@Item.Content.DirectInwardDialing</MudTd>
    <MudTd DataLabel="Estado">@Item.Content.State</MudTd>
    <MudTh>@Item.Content.CallerIdNum - @Item.Content.Exten</MudTh>
    <MudTd DataLabel="Desligado">
        @if (Item.Content.Hangup != null)
        {
            <span>(@Item.Content.Hangup.Code) @Item.Content.Hangup.Description</span>
        }
    </MudTd>
}
@code {
    [Parameter]
    [EditorRequired]
    public ChannelInfoMonitor Item { get; set; } = default!;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        Item.OnChanged += ItemChanged;
    }

    private async void ItemChanged(IMonitor sender, object? state)
    {
        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        Item.OnChanged -= ItemChanged;
    }
}