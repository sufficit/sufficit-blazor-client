@page "/pages/telephony/panel"
@attribute [Authorize]
@using Microsoft.Extensions.Options
@using Sufficit.Client
@using Sufficit.Telephony
@using Sufficit.Blazor.Client.Models
@inherits TelephonyBasePageComponent 

<EventsPanel></EventsPanel>
@if (ErrorConfig != null)
{
    <div class="alert alert-danger mb-0 m-3">
        <h4 class="alert-heading">Erro ao buscar configuração na API</h4>
        <p>@ErrorConfig.Message</p>
    </div>
}


@code{
    [Inject]
    private APIClientService? APIClient { get; set; }

    [Inject]
    private EventsPanelService? Service { get; set; }

    [Inject]
    public IOptionsMonitor<EventsPanelCardOptions> Monitor { get; set; }

    protected Exception? ErrorConfig { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if (Service != null)
        {
            try
            {
                var endpoints = await APIClient.Telephony.EventsPanel.GetEndpoints();
                if (endpoints != null)
                {
                    var ep = endpoints.FirstOrDefault();
                    if (ep != null)
                    {
                        var options = new AMIHubClientOptions() { Endpoint = new Uri(ep.Endpoint) };
                        var client = new AMIHubClient(options, null);
                        Service.Configure(client);                        
                        ErrorConfig = null;
                    }
                }
            }
            catch (Exception ex)
            {
                ErrorConfig = ex;
            }

            Service.CardAvatarHandler = GetAvatarUrl;
            await Service.StartAsync(System.Threading.CancellationToken.None);
        }
    }

    protected async Task<string> GetAvatarUrl(EventsPanelCardMonitor monitor)
    {
        return await Task.FromResult("https://www.sufficit.com.br/Relacionamento/Avatar.ashx");
    }
}