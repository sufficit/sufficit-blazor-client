@using Sufficit.Telephony.EventsPanel
@if (Service != null){    
    <p>Estado da conexão: @Service.State</p>
    @if (!Service.IsConnected)
    {
        <span>Carregando ....</span>
        <Icon Key="spinner"></Icon>
    }
    else
    {
        <div class="card-deck">
            @foreach (var Peer in Peers)
            {
                <PeerCard Peer=@Peer></PeerCard>
            }
        </div>
    }
}

<style>
    .card-deck > .card {
        max-width: 200px; 
        min-width: 150px;
    }
    .card-deck {
        justify-content: center;
        margin-left: auto;
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 200px));
        grid-gap: .3rem;
    }

    .card-deck .card[data-state="Unknown"]{
        opacity: 0.5;
    }

    .card-deck .card[data-state="Unregistered"]{
        background: rgb(114 114 114 / 10%);
    }

    .card-deck .card[data-state="Registered"]{
        background: rgb(0 231 82 / 10%);
    }

    .card-deck .card[data-state="Reachable"]{
        background: rgb(0 231 82 / 10%);
    }

    .card-deck .card[data-state="Unreachable"]{
        background: rgb(255 0 0 / 10%);
    }

    .card-deck .card[data-status] {
        background: rgb(255 150 0 / 10%);
    }
</style>