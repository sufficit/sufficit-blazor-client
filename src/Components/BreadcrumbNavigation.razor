@using Microsoft.AspNetCore.Components;
@using System;
@using System.Collections.Generic;
@using System.Linq;
@using SufficitBlazorClient.Models
@implements IDisposable
@inject IBreadcrumbService BreadcrumbService

@if (_breadcrumbs.Any())
{
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb bg-transparent mb-0 pb-0 pt-1 px-0 me-sm-6 me-5">
            @foreach (var breadcrumb in _breadcrumbs)
            {
                <li class="breadcrumb-item text-sm">@breadcrumb</li>
            }
        </ol>
        <h6 class="font-weight-bolder mb-0">@BreadcrumbService?.Description</h6>     
    </nav>
}

@code
{
    [Parameter(CaptureUnmatchedValues = true)]
    public IDictionary<string, object> AdditionalAttributes { get; set; } = null!;

    private readonly IList<RenderFragment> _breadcrumbs = new List<RenderFragment>();

    protected override void OnInitialized()
    {    
        BreadcrumbService.Added += HandleBreadcrumbAdded;
        BreadcrumbService.Reset += HandleBreadcrumbReset;        
    }

    void IDisposable.Dispose()
    {
        BreadcrumbService.Added -= HandleBreadcrumbAdded;
        BreadcrumbService.Reset -= HandleBreadcrumbReset;        
    }

    private void HandleBreadcrumbReset()
    {
        _breadcrumbs.Clear();
        StateHasChanged();
    }

    private void HandleBreadcrumbAdded(RenderFragment breadcrumb)
    {
        _breadcrumbs.Add(breadcrumb);
        StateHasChanged();
    }
}