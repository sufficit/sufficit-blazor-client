<div @ref="testRef" tabindex="0" @onkeydown="HandleKeyDown" style="outline:none; width:100%; height: 100%">
<MudStack Style="margin:auto; margin-top:30px; width:fit-content" Spacing="3">
    <MudGrid Style="position: relative; width:100%; bottom:10px">
        <MudInput @bind-Value="@Destination" Style="width:100%; padding-right:30px; font-size:24px" />
        <MudIconButton OnClick=@(() => {if(@Destination != null && @Destination.Length>0) {@Destination=@Destination.Remove(@Destination.Length - 1, 1);}}) Icon="@Icons.Material.Filled.Backspace" aria-label="backspace" Style="position:absolute; right: 0; bottom:6px; cursor:pointer; padding:0; border-radius:0 "></MudIconButton>
    </MudGrid>

    <MudGrid>
        <MudItem>
            <MudButton Color="Color.Primary"
                       Variant="Variant.Outlined"
                       Style="width:70px; height:70px; border-radius:100%;"
                       OnClick=@(() => @Destination=@Destination+1)>
                <MudStack Style="margin:auto">
                    <MudText Typo="Typo.h4">1</MudText>
                </MudStack>
            </MudButton>
        </MudItem>

        <MudItem>
            <MudButton Color="Color.Primary"
                       Variant="Variant.Outlined"
                       Style="width:70px; height:70px; border-radius:100%;"
                       OnClick=@(() => @Destination=@Destination+2)>
                <MudStack Style="margin:auto">
                    <MudText Typo="Typo.h4">2</MudText>
                    <MudText Typo="Typo.body2" Style="margin-top:-20px">ABC</MudText>
                </MudStack>
            </MudButton>
        </MudItem>

        <MudItem>
            <MudButton Color="Color.Primary"
                       Variant="Variant.Outlined"
                       Style="width:70px; height:70px; border-radius:100%;"
                       OnClick=@(() => @Destination=@Destination+3)>
                <MudStack Style="margin:auto">
                    <MudText Typo="Typo.h4">3</MudText>
                    <MudText Typo="Typo.body2" Style="margin-top:-20px">DEF</MudText>
                </MudStack>
            </MudButton>
        </MudItem>
    </MudGrid>


    <MudGrid>
        <MudItem>
            <MudButton Color="Color.Primary"
                       Variant="Variant.Outlined"
                       Style="width:70px; height:70px; border-radius:100%;"
                       OnClick=@(() => @Destination=@Destination+4)>
                <MudStack Style="margin:auto">
                    <MudText Typo="Typo.h4">4</MudText>
                    <MudText Typo="Typo.body2" Style="margin-top:-20px">GHI</MudText>
                </MudStack>
            </MudButton>
        </MudItem>

        <MudItem>
            <MudButton Color="Color.Primary"
                       Variant="Variant.Outlined"
                       Style="width:70px; height:70px; border-radius:100%;"
                       OnClick=@(() => @Destination=@Destination+5)>
                <MudStack Style="margin:auto">
                    <MudText Typo="Typo.h4">5</MudText>
                    <MudText Typo="Typo.body2" Style="margin-top:-20px">JKL</MudText>
                </MudStack>
            </MudButton>
        </MudItem>

        <MudItem>
            <MudButton Color="Color.Primary"
                       Variant="Variant.Outlined"
                       Style="width:70px; height:70px; border-radius:100%;"
                       OnClick=@(() => @Destination=@Destination+6)>
                <MudStack Style="margin:auto">
                    <MudText Typo="Typo.h4">6</MudText>
                    <MudText Typo="Typo.body2" Style="margin-top:-20px">MNO</MudText>
                </MudStack>
            </MudButton>
        </MudItem>
    </MudGrid>


    <MudGrid>
        <MudItem>
            <MudButton Color="Color.Primary"
                       Variant="Variant.Outlined"
                       Style="width:70px; height:70px; border-radius:100%;"
                       OnClick=@(() => @Destination=@Destination+7)>
                <MudStack Style="margin:auto">
                    <MudText Typo="Typo.h4">7</MudText>
                    <MudText Typo="Typo.body2" Style="margin-top:-20px">PQRS</MudText>
                </MudStack>
            </MudButton>
        </MudItem>

        <MudItem>
            <MudButton Color="Color.Primary"
                       Variant="Variant.Outlined"
                       Style="width:70px; height:70px; border-radius:100%;"
                       OnClick=@(() => @Destination=@Destination+8)>
                <MudStack Style="margin:auto">
                    <MudText Typo="Typo.h4">8</MudText>
                    <MudText Typo="Typo.body2" Style="margin-top:-20px">TUV</MudText>
                </MudStack>
            </MudButton>
        </MudItem>

        <MudItem>
            <MudButton Color="Color.Primary"
                       Variant="Variant.Outlined"
                       Style="width:70px; height:70px; border-radius:100%;"
                       OnClick=@(() => @Destination=@Destination+9)>
                <MudStack Style="margin:auto">
                    <MudText Typo="Typo.h4">9</MudText>
                    <MudText Typo="Typo.body2" Style="margin-top:-20px">WXYZ</MudText>
                </MudStack>
            </MudButton>
        </MudItem>
    </MudGrid>


    <MudGrid>
        <MudItem>
            <MudButton Color="Color.Primary"
                       Variant="Variant.Outlined"
                       Style="width:70px; height:70px; border-radius:100%;"
                       OnClick=@(() => @Destination=@Destination+"*")>
                <MudStack Style="margin:auto">
                    <MudText Typo="Typo.h4">*</MudText>
                </MudStack>
            </MudButton>
        </MudItem>

        <MudItem>
            <MudButton Color="Color.Primary"
                       Variant="Variant.Outlined"
                       Style="width:70px; height:70px; border-radius:100%;"
                       OnClick=@(() => @Destination=@Destination+0)>
                <MudStack Style="margin:auto">
                    <MudText Typo="Typo.h4">0</MudText>
                    <MudText Typo="Typo.body2" Style="margin-top:-20px">+</MudText>
                </MudStack>
            </MudButton>
        </MudItem>

        <MudItem>
            <MudIconButton Color="Color.Primary"
                           Variant="Variant.Filled"
                           Icon="@Icons.Material.Filled.Phone"
                           Style="width:70px; height:70px; border-radius:100%;"
                           OnClick=@(() => VideoCall.InvokeAsync(@Destination))>
                <MudStack Style="margin:auto">
                    <MudText Typo="Typo.h4">1</MudText>
                    <MudText Typo="Typo.body2" Style="margin-top:-20px">ABC</MudText>
                </MudStack>
            </MudIconButton>
        </MudItem>
    </MudGrid>
    </MudStack>
</div>

@code {
    [Parameter] public EventCallback<string> VideoCall { get; set; }
    private string? Destination { get; set; }
    private ElementReference testRef;

    private async void HandleKeyDown(KeyboardEventArgs e)
    {
        if(e.Key == "Backspace")
        {
            if (Destination != null && Destination.Length > 0)
            {
                Destination = Destination.Remove(@Destination.Length - 1, 1);
            }
        }
        else if (e.Key == "Enter")
        {
            await VideoCall.InvokeAsync(Destination);
        }
        else
        {
            Destination = Destination + e.Key;
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await testRef.FocusAsync();
        }
    }
}
