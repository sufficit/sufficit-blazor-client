@attribute [Authorize]
@inherits ComponentBase
@using Sufficit.Gateway.ReceitaNet

@if(Options != null) {
    <MudPaper Class="pa-3" Elevation="0">
    <MudStack>
        <MudCard Square="true" Elevation="1">
            <MudCardHeader>
                <MudGrid>
                    <MudItem xs="12" md="6">
                        <MudHidden Breakpoint="Breakpoint.MdAndUp">
                            <MudStack Row Justify="Justify.SpaceBetween" Class="align-center flex-wrap">
                                <MudIcon Icon="@Icons.Material.Filled.TripOrigin"></MudIcon>
                                <MudStack Spacing="0">
                                    <MudText Typo="Typo.h6">@Description</MudText>
                                    <MudText Typo="Typo.body2">id: @Options.Id @(IsDraft ? "(rascunho)" : string.Empty)</MudText>
                                </MudStack>
                            </MudStack>
                        </MudHidden>
                        <MudHidden Breakpoint="Breakpoint.SmAndDown">
                            <MudStack Row Justify="Justify.FlexStart" Class="align-center">
                                <MudIcon Icon="@Icons.Material.Filled.TripOrigin"></MudIcon>
                                <MudStack Spacing="0">
                                    <MudText Typo="Typo.h6">@Description</MudText>
                                    <MudText Typo="Typo.body2">id: @Options.Id @(IsDraft ? "(rascunho)" : string.Empty)</MudText>
                                </MudStack>
                            </MudStack>
                        </MudHidden>
                    </MudItem>
                    @if (!IsDraft)
                    {
                        <MudItem xs="12" md="6">
                            <MudStack Justify="Justify.FlexEnd">
                                @if (Options.Updated > DateTime.MinValue)
                                {
                                    <MudElement Style="padding: 1rem; display: flex; justify-content:end">
                                        <MudTooltip Text="Última atualização">
                                            <MudStack Row="true">
                                                <MudText Typo="Typo.body2">@Options.Updated.ToLocalTime()</MudText>
                                                <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.EditCalendar"></MudIcon>
                                            </MudStack>
                                        </MudTooltip>
                                    </MudElement>
                                }
                            </MudStack>
                        </MudItem>
                    }
                </MudGrid>
                @if (!IsDraft)
                {
                    <MudCardActions>
                        <MudFab StartIcon="@Icons.Material.Outlined.History" Size="Size.Small" DisableElevation="true" OnClick="GoToHistory" />
                    </MudCardActions>
                }
            </MudCardHeader>
        </MudCard> 
        
            <MudItem xs="12" lg="6">
                <MudCard Elevation="0">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.body1">Titulo</MudText>
                            <MudText Typo="Typo.body2">Identificação nos sistemas de apontamentos ou relatórios</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudDivider />
                    <MudCardContent>
                        <MudTextField Style="margin-top:10px" Variant="Variant.Outlined" IconSize="Size.Small" T="string" @bind-Value="@Options.Title" />
                    </MudCardContent>
                </MudCard>
            </MudItem>

        <MudGrid>
            <MudItem xs="12" lg="3">
                <MudCard Elevation="0">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudStack Row="true">
                                <MudIcon Icon="@Icons.Material.Filled.PowerSettingsNew" />
                                <MudText Typo="Typo.h6">
                                    Habilitado
                                </MudText>
                            </MudStack>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent Style="min-height: 160px">
                        <MudText Typo="Typo.body2" Style="margin-top:8px">
                            Ao desativar, todas as chamadas serão
                            encaminhadas automaticamente para o destino de falha.
                        </MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <MudSwitchButton @bind-Checked="Options.Enabled">
                            <MudIcon Icon="@Icons.Material.Filled.PowerSettingsNew" />
                            <MudText Style="margin-left:10px">
                                habilitado
                            </MudText>
                        </MudSwitchButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
            <MudItem xs="12" lg="3">
                <MudCard Elevation="0">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudStack Row="true" Style="display:flex; align-items:center">
                                <MudIcon Icon="@Icons.Material.Filled.Key" />
                                <MudText Typo="Typo.h6">
                                    Protocolo
                                </MudText>
                            </MudStack>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent Style="min-height: 160px">
                        <MudText Typo="Typo.body2">Informar protocolo sempre que estiver disponível ?</MudText>
                        <MudDivider Class="my-2"></MudDivider>
                        <MudText Typo="Typo.caption" Style="margin-top:8px">
                            Normalmente após algum relato de problema
                            técnico ou financeiro.
                        </MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth>
                            <MudIcon Icon="@Icons.Material.Filled.PowerSettingsNew"
                                        Title="PowerSettingsNew" />
                            <MudText Style="margin-left:10px">
                                protocolo
                            </MudText>
                        </MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
            <MudItem xs="12" lg="3">
                <MudCard Elevation="0">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudStack Row="true" Style="display:flex; align-items:center">
                                <MudIcon Icon="@Icons.Material.Filled.AccountBalance" Title="Money" />
                                <MudText Typo="Typo.h6">
                                    Financeiro
                                </MudText>
                            </MudStack>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent Style="min-height: 160px">
                        <MudText Typo="Typo.body2">Informar opções financeiras mesmo sem fatura em atraso ?</MudText>
                        <MudDivider Class="my-2"></MudDivider>
                        <MudText Typo="Typo.caption" Style="margin-top:8px">
                            A opção de emissão e envio de faturas será
                            disponibilizada sempre que houver algum boleto disponível no sistema.
                        </MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth>
                            <MudIcon Icon="@Icons.Material.Filled.AccountBalance" Title="Money" />
                            <MudText Style="margin-left:10px">
                                financeiro
                            </MudText>
                        </MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
            <MudItem xs="12" lg="3">
                <MudCard Elevation="0">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudStack Row="true" Style="display:flex; align-items:center">
                                <MudIcon Icon="@Icons.Material.Filled.KeyboardVoice"
                                            Title="KeyboardVoice" />
                                <MudText Typo="Typo.h6">
                                    Locução
                                </MudText>
                            </MudStack>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent Style="min-height: 160px">
                        <MudText Typo="Typo.body2">Ativar / Desativar</MudText>
                        <MudDivider Class="my-2"></MudDivider>
                        <MudText Typo="Typo.caption" Style="margin-top:8px">
                            Será usada essa voz para todos os áudios
                            fixos do menu, não se aplica as respostas personalizadas como Protocolo.
                        </MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <MudSelect Margin="Margin.Dense" @bind-Value="Options.Announcer" T="RNAnnouncer" Variant="Variant.Outlined">
                            @foreach (var announcer in Enum.GetValues<RNAnnouncer>())
                            {
                                <MudSelectItem Value="@announcer">@Sufficit.EnumExtensions.GetEnumDescription(announcer)</MudSelectItem>
                            }
                        </MudSelect>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        </MudGrid>

        <MudDivider />
        <MudItem xs="12" lg="6">
            <MudCard Elevation="0">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.body1"># Tokens</MudText>
                        <MudText Typo="Typo.body2">Chaves fornecidas pelo desenvolvedor do software. (há custos mensais)</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudDivider />
                <MudCardContent>
                    <MudTextField Style="margin-top:10px" Variant="Variant.Outlined" IconSize="Size.Small" T="string" @bind-Value="@CurrentToken" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Add" OnAdornmentClick="OnTokenAdded" />

                    @foreach (string token in Options.Tokens)
                    {
                        <MudTextField Style="margin-top:10px" Variant="Variant.Outlined" IconSize="Size.Small" T="string" Text="@token" ReadOnly="true" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Remove" OnAdornmentClick="() => OnTokenRemoved(token)" />
                    }
                </MudCardContent>
            </MudCard>
        </MudItem>

        <MudDivider />

        <MudCard Elevation="0">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.body1">Opções de destino</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudStack>        
                    <MudItem md="6" xs="12">
                        <MudStack Row="true" StretchItems="StretchItems.Start">
                            <MudTooltip Text="Saída usada caso o sistema apresente qualquer tipo de falha" Placement="Placement.Right" Arrow="true">
                                <MudIconButton Style="height: fit-content; padding: 7px; margin-top: 8px;" Icon="@Icons.Material.TwoTone.Info" Variant="Variant.Outlined" Color="Color.Info" Size="Size.Medium" />
                            </MudTooltip>
                            <IDestinationSearch ContextId="@ContextView?.ContextId" @bind-Asterisk="Fail.Asterisk" Label="Falha"></IDestinationSearch>
                            <MudIconButton OnClick=@(() => Fail.Asterisk = string.Empty) Style="height: fit-content; padding: 7px; margin-top: 8px;" ButtonType="ButtonType.Reset" Icon="@Icons.Material.Filled.Delete" Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Medium" />
                        </MudStack>
                    </MudItem>
                    <MudItem md="6" xs="12">
                        <MudStack Row="true" StretchItems="StretchItems.Start">
                            <MudTooltip Text="Chamada encerrada com sucesso | Atendimento concluído e cliente satisfeito" Placement="Placement.Right" Arrow="true">
                                    <MudIconButton Style="height: fit-content; padding: 7px; margin-top: 8px;" Icon="@Icons.Material.TwoTone.Info" Variant="Variant.Outlined" Color="Color.Info" Size="Size.Medium" />
                            </MudTooltip>
                            <IDestinationSearch ContextId="@ContextView?.ContextId" @bind-Asterisk="Hangup.Asterisk" Label="Desligar"></IDestinationSearch>
                            <MudIconButton OnClick=@(() => Hangup.Asterisk = string.Empty) Style="height: fit-content; padding: 7px; margin-top: 8px;" ButtonType="ButtonType.Reset" Icon="@Icons.Material.Filled.Delete" Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Medium" />
                        </MudStack>
                    </MudItem>
                    <MudItem md="6" xs="12">
                        <MudStack Row="true" StretchItems="StretchItems.Start">
                            <MudTooltip Text="Saída usada caso o cliente foi identificado e por algum motivo solicitou ser atendido por uma pessoa | Normalmente tecla 9" Placement="Placement.Right" Arrow="true">
                                    <MudIconButton Style="height: fit-content; padding: 7px; margin-top: 8px;" Icon="@Icons.Material.TwoTone.Info" Variant="Variant.Outlined" Color="Color.Info" Size="Size.Medium" />
                            </MudTooltip>
                            <IDestinationSearch ContextId="@ContextView?.ContextId" @bind-Asterisk="Solicited.Asterisk" Label="Solicitado"></IDestinationSearch>
                            <MudIconButton OnClick=@(() => Solicited.Asterisk = string.Empty) Style="height: fit-content; padding: 7px; margin-top: 8px;" ButtonType="ButtonType.Reset" Icon="@Icons.Material.Filled.Delete" Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Medium" />
                        </MudStack>
                    </MudItem>
                    <MudItem md="6" xs="12">
                        <MudStack Row="true" StretchItems="StretchItems.Start">
                            <MudTooltip Text="Saída usada caso o cliente foi identificado e está conectado | Outros assuntos ou provável instabilidade na conexão" Placement="Placement.Right" Arrow="true">
                                    <MudIconButton Style="height: fit-content; padding: 7px; margin-top: 8px;" Icon="@Icons.Material.TwoTone.Info" Variant="Variant.Outlined" Color="Color.Info" Size="Size.Medium" />
                            </MudTooltip>
                            <IDestinationSearch ContextId="@ContextView?.ContextId" @bind-Asterisk="Connected.Asterisk" Label="Conectado"></IDestinationSearch>
                            <MudIconButton OnClick=@(() => Connected.Asterisk = string.Empty) Style="height: fit-content; padding: 7px; margin-top: 8px;" ButtonType="ButtonType.Reset" Icon="@Icons.Material.Filled.Delete" Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Medium" />
                        </MudStack>
                    </MudItem>
                    <MudItem md="6" xs="12">
                        <MudStack Row="true" StretchItems="StretchItems.Start">
                            <MudTooltip Text="Saída usada quando o chamador não é cliente ou não conseguiu se identificar" Placement="Placement.Right" Arrow="true">
                                    <MudIconButton Style="height: fit-content; padding: 7px; margin-top: 8px;" Icon="@Icons.Material.TwoTone.Info" Variant="Variant.Outlined" Color="Color.Info" Size="Size.Medium" />
                            </MudTooltip>
                            <IDestinationSearch ContextId="@ContextView?.ContextId" @bind-Asterisk="Unknown.Asterisk" Label="Desconhecido"></IDestinationSearch>
                            <MudIconButton OnClick=@(() => Unknown.Asterisk = string.Empty) Style="height: fit-content; padding: 7px; margin-top: 8px;" ButtonType="ButtonType.Reset" Icon="@Icons.Material.Filled.Delete" Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Medium" />
                        </MudStack>
                    </MudItem>
                </MudStack> 
            </MudCardContent>
        </MudCard>

        <MudStack Style="width: fit-content; padding:0 20px; margin: auto; background: white; z-index: 10;">
            <MudButton Variant="Variant.Outlined"
                        StartIcon="@Icons.Material.Filled.SecurityUpdateGood"
                        Color="Color.Primary"
                        Style="width:fit-content"
                        OnClick="@Save">
                Atualizar
            </MudButton>
        </MudStack>

        <MudDivider Style="margin-top:-30px; margin-bottom:40px" />
    </MudStack>
</MudPaper>
}